<!-- Problem Set Manager Templates -->

<script type="text/template" id="problem-set-manager-template">
  <div class="row">
      <div class="col-md-3">
        <div class="input-group">
          <input type="text" class="form-control filter-text" placeholder="Filter">
          <span class="input-group-btn">
            <button class="btn btn-default clear-filter-button" type="button"><i class="fa fa-times"></i></button>
          </span>
        </div>
      </div>
    <div class="col-md-2" style="padding: 5px">
    <label type="checkbox">Show Time <input type="checkbox" class="show-time-toggle"></label>
    </div>
    <div class="col-md-2 num-sets" style="padding: 5px">
    </div>
    <div class="pull-right btn-group">

      <div class="btn-group">
        <button class="btn btn-default dropdown-toggle" onclick="return false" data-toggle="dropdown" 
            href="#">Action on Selected
          <span class="caret"></span>
        </button>
        <ul class="dropdown-menu">
          <li><a onclick="return false" href="#" class="change-set-props" data-toggle="modal">Change Set Properties</a></li>
          <li><a onclick="return false" href="#" class="delete-sets-button">Delete Sets</a></li>
        </ul>
      </div>

      <div class="btn-group">
        <button class="btn btn-default dropdown-toggle" data-toggle="dropdown" href="#">Show Rows
          <span class="caret"></span>
        </button>
        <ul class="dropdown-menu">
          <li><a href="#" onclick="return false" class="show-rows" data-num="10"><i class="fa fa-check"></i>Show 10 rows</a></li>
          <li><a href="#" onclick="return false" class="show-rows" data-num="25"><i class="fa fa-check not-visible"></i>Show 25 rows</a></li>
          <li><a href="#" onclick="return false" class="show-rows" data-num="50"><i class="fa fa-check not-visible"></i>Show 50 rows</a></li>
          <li><a href="#" onclick="return false" class="show-rows" data-num="-1"><i class="fa fa-check not-visible"></i>Show All rows</a></li>

        </ul>
      </div>

      <button class="btn btn-default add-problem-set-button">Add Problem Set</button>
    </div>
  </div>
  <div class="modal-container">
  </div>
</script>

<script type="text/template"  id="change-set-props-template">
  <p>To change the desired dates and other properties below then click "Save Changes".</p>
  <table class="table">
    <tbody>
    <tr><td class="header">Set Names</td><td class="set-names"></td></tr>
    <tr><td class="header">Open Date</td><td class="open-date edit-datetime"></td></tr>
    <tr class="hidden"><td class="header">Reduced Scoring Date</td><td class="reduced-scoring-date edit-datetime"></td></tr>
    <tr><td class="header">Due Date</td><td class="due-date edit-datetime"></td></tr>
    <tr><td class="header">Answer Date</td><td class="answer-date edit-datetime"></td></tr>
    <tr><td class="header">Problem Set Visible to Users</td><td><input type="checkbox" class='prob-set-visible'></td></tr>
    <tr><td class="header">Reduced Scoring Enabled</td><td><input type="checkbox" class='reduced-scoring'></td></tr>
    </tbody>
  </table>
</script>

<script type="text/template" id="add-hw-set-template">
  <div class="add-problem-set-dialog-content">
  <p>A new homework set with the name below will be created.  In addition, it will be assigned to you 
  (user: <%= users %>).  To assign it to other users, use the <em>Set Properties</em> tab.</p>
  <table style="table-layout-fixed; width: 100%"><tr>
    <td>Homework Set Name:</td>
    <td><input type='text' size='20' class='problem-set-name'></td>
    </tr>
    <tr><td  colspan="2" class="problem-set-name-error" style="color: red"></td></tr>
    <tr> 
    <td>Assign to All Users</td><td><input type='checkbox' class="assign-to-all-users"></td>
    </tr>
    </table>
    </div>

</script>


<script type="text/template" id="problem-sets-manager-help-template">
<h4>Manager Problem Sets:</h4>
      <ul>  
        <li>This view shows details of all of the problem sets.  You can change the dates, visibility and reduced credit for each set here by clicking or change the appropriate item. </li>
        <li>To add a new set, click the "Add Problem Set" button at the top of the page. </li>
        <li>To delete a set click the <button class="btn btn-default btn-sm"><i class="fa fa-trash-o"></i></button> button. </li>
        <li>If there are more that 10 sets, you can view the remainder by click the forward page button at the bottom. </li>
        <li>You can sort by any aspect of the sets, by clicking the header column. </li>
      </ul>
</script>

<script type="text/template" id="problem-sets-manager-messages-template">
<%
var messages = {
    openDate_after_dueDate: function(opt){return "Error saving problem set " + opt.set_id 
      + ". The open date must come before the due date";},
    dueDate_after_answerDate: function(opt){return "Error saving problem set " + opt.set_id 
      + ". The due date must come before the answer date";},
    date_set_error: function(opt) { return "The " + opt.date1 + " comes after " + opt.date2 + " for set " 
      + opt.set_id + "."},
    set_saved: function(opt){ return "Set " + opt.setname + " saved.";},
    set_saved_details: function(opt){return "The value of " + opt.key + " in problem set " 
      + opt.setname + " has changed from " + opt.oldValue + " to " + opt.newValue + ".";},
    set_added: function(opt){ return "Set " + opt.setname + " added.";},
    set_added_details: function(opt){ return "The set " + opt.setname + " was added to the course."},
    set_removed: function(opt){ return "Set " + opt.setname + " removed.";},
    set_removed_details: function(opt){ return "The set " + opt.setname + " was removed to the course."},
    set_error: function(opt){ return "Error saving set " + opt.setname + " .";},
    set_error_details: function(opt){ return "The set " + opt.setname + " had an error."},
    set_assigned_users_saved: function(opt){ 
      return "The assigned users for set " + opt.setname + " was updated."},
    mark_all_correct: function (opt) {return "Would you like to mark this problem correct for all assigned students?  This can not be undone.";},
    problem_added: function(opt){ return "A problem was added to " + opt.setname},
    problem_added_details: function(opt){ return "A problem was added to " + opt.setname},
    problems_reordered: function(opt){ return "The problems were reordered in " + opt.setname},
    problems_reordered_details: function(opt){ return "The problems were reordered in " + opt.setname},
    problems_values_details: function(opt) { return "The attribute " + opt.attribute + "  for problem " 
        + opt.problem_id + " of set " + opt.set_id +
        " was changed from "+ opt.oldValue + " to " + opt.newValue + "."},
    problem_deleted: function(opt) { return "A problem was deleted from set " + opt.setname},
    problem_deleted_details: function(opt) { return "The problem with problem_id " + opt.problem_id 
        + " was deleted from set " + opt.setname},  
    problems_shown: function(opt) {return opt.probFrom + " to " + opt.probTo + " of " + opt.total + " shown";},
    setting_saved: function(opt){ return "The setting " + opt.varname + " was saved.";},
    setting_saved_details: function(opt) { return "The setting " + opt.varname + " has changed from " +
                                opt.oldValue + " to " + opt.newValue + "."},
    empty_selected_sets_error: function () { return "You must select at least one set.";},
    problem_updated: function(opt) { return "Problem # " + opt.problem_id + " for set " + opt.set_id +
                                        " and user " + opt.user_id + " has been updated.";}
}
print(messages[type](typeof(opts)=="undefined"?{}:opts))
%>

</script>